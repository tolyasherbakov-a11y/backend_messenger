# Боевой reverse-proxy с поддержкой WebSocket, gzip и безопасных заголовков.
# По умолчанию слушаем :80. Для TLS раскомментируйте сервер на :443 и смонтируйте cert/key.

user  nginx;
worker_processes  auto;

events {
  worker_connections  10240;
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Логи
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  # Производительность и буферы
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  client_max_body_size 100m;  # реальный лимит аплоада реализован на уровне S3 presign

  # Сжатие
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/json
    application/javascript
    application/xml
    text/plain
    text/css
    text/javascript;

  # Безопасные заголовки
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # upstream на API
  upstream api_upstream {
    server api:8080 max_fails=3 fail_timeout=10s;
    keepalive 64;
  }

  # HTTP (без TLS). В проде рекомендуется редирект на 443 и основной сервер на TLS ниже.
  server {
    listen 80;
    server_name _;

    # Базовые security headers (CSP лучше выдавать из самого API с nonce)
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy no-referrer-when-downgrade;
    add_header X-XSS-Protection "1; mode=block";

    # Статус/хелсчеки (проксируем к API)
    location = /healthz { proxy_pass http://api_upstream/healthz; }
    location = /readyz  { proxy_pass http://api_upstream/readyz; }

    # Документация (Swagger UI, если включён на API)
    location /docs/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
      proxy_pass http://api_upstream;
    }

    # WebSocket (для мессенджера)
    location /v1/ws {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
      proxy_connect_timeout 5s;
      proxy_pass http://api_upstream;
    }

    # Основной API
    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
      proxy_read_timeout 120s;
      proxy_send_timeout 120s;
      proxy_connect_timeout 5s;
      proxy_pass http://api_upstream;
    }

    # WebSocket Realtime
    location /ws {
      proxy_pass http://realtime:8081/ws;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_read_timeout 60s;
    }
  }

  # ---- Пример TLS-конфига (раскомментируйте при наличии сертификатов) ----
  # server {
  #   listen 443 ssl http2;
  #   server_name _;

  #   ssl_certificate     /etc/nginx/certs/fullchain.pem;
  #   ssl_certificate_key /etc/nginx/certs/privkey.pem;
  #   ssl_protocols       TLSv1.2 TLSv1.3;
  #   ssl_ciphers         HIGH:!aNULL:!MD5;
  #   ssl_prefer_server_ciphers on;

  #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  #   location = /healthz { proxy_pass http://api_upstream/healthz; }
  #   location = /readyz  { proxy_pass http://api_upstream/readyz; }
  #   location /v1/ws { # WebSocket
  #     proxy_http_version 1.1;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection $connection_upgrade;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_set_header X-Request-Id $request_id;
  #     proxy_read_timeout 300s;
  #     proxy_send_timeout 300s;
  #     proxy_connect_timeout 5s;
  #     proxy_pass http://api_upstream;
  #   }
  #   location / {
  #     proxy_http_version 1.1;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_set_header X-Request-Id $request_id;
  #     proxy_read_timeout 120s;
  #     proxy_send_timeout 120s;
  #     proxy_connect_timeout 5s;
  #     proxy_pass http://api_upstream;
  #   }
  # }

}
